### YamlMime:ManagedReference
items:
- uid: Yort.OnlineEftpos.KnownBanks
  commentId: T:Yort.OnlineEftpos.KnownBanks
  id: KnownBanks
  parent: Yort.OnlineEftpos
  children:
  - Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  - Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  - Yort.OnlineEftpos.KnownBanks.All
  - Yort.OnlineEftpos.KnownBanks.All
  - Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  - Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  - Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  - Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  langs:
  - csharp
  - vb
  name: KnownBanks
  nameWithType: KnownBanks
  fullName: Yort.OnlineEftpos.KnownBanks
  type: Class
  source:
    id: KnownBanks
    path: ''
    startLine: 1533
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nProvides a list of banks known to be supported, and the payer id types each one supports. \n"
  remarks: "\n<p>As this list is hard coded into the library it may or may not be up to date at any given point in time. It should be used only as a UI guide, and not\na validation list/authority.</p>\n<p>The list is exposed as modifiable collections so if an authoritive source becomes available, this data can be modified at runtime.</p>\n"
  example: []
  syntax:
    content: public static class KnownBanks
    content.vb: Public Module KnownBanks
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  commentId: M:Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  id: AddBank(Yort.OnlineEftpos.BankDefinition)
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: AddBank(BankDefinition)
  nameWithType: KnownBanks.AddBank(BankDefinition)
  fullName: Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  type: Method
  source:
    id: AddBank
    path: ''
    startLine: 93
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nAdds a <xref href=\"Yort.OnlineEftpos.BankDefinition\" data-throw-if-not-resolved=\"false\"></xref> to the set of known, supported banks.\n"
  example: []
  syntax:
    content: public static bool AddBank(BankDefinition bank)
    parameters:
    - id: bank
      type: Yort.OnlineEftpos.BankDefinition
      description: A <xref href="Yort.OnlineEftpos.BankDefinition" data-throw-if-not-resolved="false"></xref> instance to be added to the collection of known banks.
    return:
      type: System.Boolean
      description: True if the item was succesfully added, otherwise false (usually because the id is a duplicate).
    content.vb: Public Shared Function AddBank(bank As BankDefinition) As Boolean
  overload: Yort.OnlineEftpos.KnownBanks.AddBank*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the id of the <code data-dev-comment-type="paramref" class="paramref">bank</code> reference is null, empty or only whitespace.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">bank</code> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  commentId: M:Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  id: RemoveBank(System.String)
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: RemoveBank(String)
  nameWithType: KnownBanks.RemoveBank(String)
  fullName: Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  type: Method
  source:
    id: RemoveBank
    path: ''
    startLine: 105
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nRemoves a bank from the list of known banks.\n"
  example: []
  syntax:
    content: public static bool RemoveBank(string id)
    parameters:
    - id: id
      type: System.String
      description: The id of the bank defintion to remove.
    return:
      type: System.Boolean
      description: True if the item was removed, false if it was not found.
    content.vb: Public Shared Function RemoveBank(id As String) As Boolean
  overload: Yort.OnlineEftpos.KnownBanks.RemoveBank*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the id of the <code data-dev-comment-type="paramref" class="paramref">id</code> reference is null, empty or only whitespace.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  commentId: M:Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  id: GetBank(System.String)
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: GetBank(String)
  nameWithType: KnownBanks.GetBank(String)
  fullName: Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  type: Method
  source:
    id: GetBank
    path: ''
    startLine: 116
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nReturns the bank with the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">id</code>, or null if no bank with that id was found.\n"
  example: []
  syntax:
    content: public static BankDefinition GetBank(string id)
    parameters:
    - id: id
      type: System.String
      description: The unique id of the bank object to retrieve.
    return:
      type: Yort.OnlineEftpos.BankDefinition
      description: A <xref href="Yort.OnlineEftpos.BankDefinition" data-throw-if-not-resolved="false"></xref> containing details of the known bank, or null if no relevant bank was found.
    content.vb: Public Shared Function GetBank(id As String) As BankDefinition
  overload: Yort.OnlineEftpos.KnownBanks.GetBank*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.OnlineEftpos.KnownBanks.All
  commentId: P:Yort.OnlineEftpos.KnownBanks.All
  id: All
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: All
  nameWithType: KnownBanks.All
  fullName: Yort.OnlineEftpos.KnownBanks.All
  type: Property
  source:
    id: All
    path: ''
    startLine: 129
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nReturns all known banks as an <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Yort.OnlineEftpos.BankDefinition\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: public static IEnumerable<BankDefinition> All { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Yort.OnlineEftpos.BankDefinition}
    content.vb: Public Shared ReadOnly Property All As IEnumerable(Of BankDefinition)
  overload: Yort.OnlineEftpos.KnownBanks.All*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  commentId: M:Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  id: AddBank(Yort.OnlineEftpos.BankDefinition)
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: AddBank(BankDefinition)
  nameWithType: KnownBanks.AddBank(BankDefinition)
  fullName: Yort.OnlineEftpos.KnownBanks.AddBank(Yort.OnlineEftpos.BankDefinition)
  type: Method
  source:
    id: AddBank
    path: ''
    startLine: 1568
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nAdds a <xref href=\"Yort.OnlineEftpos.BankDefinition\" data-throw-if-not-resolved=\"false\"></xref> to the set of known, supported banks.\n"
  example: []
  syntax:
    content: public static bool AddBank(BankDefinition bank)
    parameters:
    - id: bank
      type: Yort.OnlineEftpos.BankDefinition
      description: A <xref href="Yort.OnlineEftpos.BankDefinition" data-throw-if-not-resolved="false"></xref> instance to be added to the collection of known banks.
    return:
      type: System.Boolean
      description: True if the item was succesfully added, otherwise false (usually because the id is a duplicate).
    content.vb: Public Shared Function AddBank(bank As BankDefinition) As Boolean
  overload: Yort.OnlineEftpos.KnownBanks.AddBank*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the id of the <code data-dev-comment-type="paramref" class="paramref">bank</code> reference is null, empty or only whitespace.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">bank</code> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  commentId: M:Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  id: RemoveBank(System.String)
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: RemoveBank(String)
  nameWithType: KnownBanks.RemoveBank(String)
  fullName: Yort.OnlineEftpos.KnownBanks.RemoveBank(System.String)
  type: Method
  source:
    id: RemoveBank
    path: ''
    startLine: 1582
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nRemoves a bank from the list of known banks.\n"
  example: []
  syntax:
    content: public static bool RemoveBank(string id)
    parameters:
    - id: id
      type: System.String
      description: The id of the bank defintion to remove.
    return:
      type: System.Boolean
      description: True if the item was removed, false if it was not found.
    content.vb: Public Shared Function RemoveBank(id As String) As Boolean
  overload: Yort.OnlineEftpos.KnownBanks.RemoveBank*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the id of the <code data-dev-comment-type="paramref" class="paramref">id</code> reference is null, empty or only whitespace.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  commentId: M:Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  id: GetBank(System.String)
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: GetBank(String)
  nameWithType: KnownBanks.GetBank(String)
  fullName: Yort.OnlineEftpos.KnownBanks.GetBank(System.String)
  type: Method
  source:
    id: GetBank
    path: ''
    startLine: 1595
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nReturns the bank with the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">id</code>, or null if no bank with that id was found.\n"
  example: []
  syntax:
    content: public static BankDefinition GetBank(string id)
    parameters:
    - id: id
      type: System.String
      description: The unique id of the bank object to retrieve.
    return:
      type: Yort.OnlineEftpos.BankDefinition
      description: A <xref href="Yort.OnlineEftpos.BankDefinition" data-throw-if-not-resolved="false"></xref> containing details of the known bank, or null if no relevant bank was found.
    content.vb: Public Shared Function GetBank(id As String) As BankDefinition
  overload: Yort.OnlineEftpos.KnownBanks.GetBank*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.OnlineEftpos.KnownBanks.All
  commentId: P:Yort.OnlineEftpos.KnownBanks.All
  id: All
  parent: Yort.OnlineEftpos.KnownBanks
  langs:
  - csharp
  - vb
  name: All
  nameWithType: KnownBanks.All
  fullName: Yort.OnlineEftpos.KnownBanks.All
  type: Property
  source:
    id: All
    path: ''
    startLine: 1611
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nReturns all known banks as an <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Yort.OnlineEftpos.BankDefinition\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: public static IEnumerable<BankDefinition> All { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Yort.OnlineEftpos.BankDefinition}
    content.vb: Public Shared ReadOnly Property All As IEnumerable(Of BankDefinition)
  overload: Yort.OnlineEftpos.KnownBanks.All*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Yort.OnlineEftpos
  commentId: N:Yort.OnlineEftpos
  isExternal: false
  name: Yort.OnlineEftpos
  nameWithType: Yort.OnlineEftpos
  fullName: Yort.OnlineEftpos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.OnlineEftpos.BankDefinition
  commentId: T:Yort.OnlineEftpos.BankDefinition
  parent: Yort.OnlineEftpos
  isExternal: false
  name: BankDefinition
  nameWithType: BankDefinition
  fullName: Yort.OnlineEftpos.BankDefinition
- uid: Yort.OnlineEftpos.KnownBanks.AddBank*
  commentId: Overload:Yort.OnlineEftpos.KnownBanks.AddBank
  isExternal: false
  name: AddBank
  nameWithType: KnownBanks.AddBank
  fullName: Yort.OnlineEftpos.KnownBanks.AddBank
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Yort.OnlineEftpos.KnownBanks.RemoveBank*
  commentId: Overload:Yort.OnlineEftpos.KnownBanks.RemoveBank
  isExternal: false
  name: RemoveBank
  nameWithType: KnownBanks.RemoveBank
  fullName: Yort.OnlineEftpos.KnownBanks.RemoveBank
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.OnlineEftpos.KnownBanks.GetBank*
  commentId: Overload:Yort.OnlineEftpos.KnownBanks.GetBank
  isExternal: false
  name: GetBank
  nameWithType: KnownBanks.GetBank
  fullName: Yort.OnlineEftpos.KnownBanks.GetBank
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.OnlineEftpos.KnownBanks.All*
  commentId: Overload:Yort.OnlineEftpos.KnownBanks.All
  isExternal: false
  name: All
  nameWithType: KnownBanks.All
  fullName: Yort.OnlineEftpos.KnownBanks.All
- uid: System.Collections.Generic.IEnumerable{Yort.OnlineEftpos.BankDefinition}
  commentId: T:System.Collections.Generic.IEnumerable{Yort.OnlineEftpos.BankDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BankDefinition>
  nameWithType: IEnumerable<BankDefinition>
  fullName: System.Collections.Generic.IEnumerable<Yort.OnlineEftpos.BankDefinition>
  nameWithType.vb: IEnumerable(Of BankDefinition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Yort.OnlineEftpos.BankDefinition)
  name.vb: IEnumerable(Of BankDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Yort.OnlineEftpos.BankDefinition
    name: BankDefinition
    nameWithType: BankDefinition
    fullName: Yort.OnlineEftpos.BankDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Yort.OnlineEftpos.BankDefinition
    name: BankDefinition
    nameWithType: BankDefinition
    fullName: Yort.OnlineEftpos.BankDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
