### YamlMime:ManagedReference
items:
- uid: Yort.OnlineEftpos.OnlineEftposTransactionTypes
  commentId: T:Yort.OnlineEftpos.OnlineEftposTransactionTypes
  id: OnlineEftposTransactionTypes
  parent: Yort.OnlineEftpos
  children:
  - Yort.OnlineEftpos.OnlineEftposTransactionTypes.Regular
  - Yort.OnlineEftpos.OnlineEftposTransactionTypes.TrustSetup
  langs:
  - csharp
  - vb
  name: OnlineEftposTransactionTypes
  nameWithType: OnlineEftposTransactionTypes
  fullName: Yort.OnlineEftpos.OnlineEftposTransactionTypes
  type: Class
  source:
    id: OnlineEftposTransactionTypes
    path: ''
    startLine: 5157
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nProvides string constants for known &apos;transaction types&apos; used by Online EFTPOS.\n"
  example: []
  syntax:
    content: public static class OnlineEftposTransactionTypes
    content.vb: Public Module OnlineEftposTransactionTypes
  seealso:
  - linkId: Yort.OnlineEftpos.PaymentDetails
    commentId: T:Yort.OnlineEftpos.PaymentDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Yort.OnlineEftpos.OnlineEftposTransactionTypes.Regular
  commentId: F:Yort.OnlineEftpos.OnlineEftposTransactionTypes.Regular
  id: Regular
  parent: Yort.OnlineEftpos.OnlineEftposTransactionTypes
  langs:
  - csharp
  - vb
  name: Regular
  nameWithType: OnlineEftposTransactionTypes.Regular
  fullName: Yort.OnlineEftpos.OnlineEftposTransactionTypes.Regular
  type: Field
  source:
    id: Regular
    path: ''
    startLine: 5165
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nA standard payment/refund transaction. The default value for most transactions.\n"
  remarks: "\n<p>Returns the string &quot;REGULAR&quot; (without the quotes).</p>\n"
  example: []
  syntax:
    content: public const string Regular = "REGULAR"
    return:
      type: System.String
    content.vb: Public Const Regular As String = "REGULAR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.OnlineEftpos.OnlineEftposTransactionTypes.TrustSetup
  commentId: F:Yort.OnlineEftpos.OnlineEftposTransactionTypes.TrustSetup
  id: TrustSetup
  parent: Yort.OnlineEftpos.OnlineEftposTransactionTypes
  langs:
  - csharp
  - vb
  name: TrustSetup
  nameWithType: OnlineEftposTransactionTypes.TrustSetup
  fullName: Yort.OnlineEftpos.OnlineEftposTransactionTypes.TrustSetup
  type: Field
  source:
    id: TrustSetup
    path: ''
    startLine: 5175
  assemblies:
  - cs.temp.dll
  namespace: Yort.OnlineEftpos
  summary: "\nA transaction type that indicates along with a regular purchase or refund, a trust relationship is requested\nso the merchant can charge this customer again in the future without the customer having to explicitly authorise\neach payment\n"
  remarks: "\n<p>Returns the string &quot;TRUSTSETUP&quot; (without the quotes).</p>\n"
  example: []
  syntax:
    content: public const string TrustSetup = "TRUSTSETUP"
    return:
      type: System.String
    content.vb: Public Const TrustSetup As String = "TRUSTSETUP"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Yort.OnlineEftpos.PaymentDetails
  commentId: T:Yort.OnlineEftpos.PaymentDetails
  parent: Yort.OnlineEftpos
  isExternal: false
  name: PaymentDetails
  nameWithType: PaymentDetails
  fullName: Yort.OnlineEftpos.PaymentDetails
- uid: Yort.OnlineEftpos
  commentId: N:Yort.OnlineEftpos
  isExternal: false
  name: Yort.OnlineEftpos
  nameWithType: Yort.OnlineEftpos
  fullName: Yort.OnlineEftpos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
